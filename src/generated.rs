// This file is generated.
//
// Do NOT edit this file, instead modify the generator.

#[doc = "Absolute axes."]
#[repr(transparent)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]
pub struct AbsoluteAxis(u32);
impl AbsoluteAxis {
    pub const fn new(value: u32) -> Self {
        Self(value)
    }
    pub const fn into_inner(self) -> u32 {
        self.0
    }
}
impl From<u32> for AbsoluteAxis {
    fn from(value: u32) -> Self {
        Self(value)
    }
}
impl From<AbsoluteAxis> for u32 {
    fn from(value: AbsoluteAxis) -> u32 {
        value.0
    }
}
impl AsRef<u32> for AbsoluteAxis {
    fn as_ref(&self) -> &u32 {
        &self.0
    }
}
impl ::core::borrow::Borrow<u32> for AbsoluteAxis {
    fn borrow(&self) -> &u32 {
        &self.0
    }
}
impl PartialEq<u32> for AbsoluteAxis {
    fn eq(&self, other: &u32) -> bool {
        &self.0 == other
    }
}
impl AbsoluteAxis {
    #[doc(alias = "ABS_X")]
    pub const X: AbsoluteAxis = AbsoluteAxis(0u32);
    #[doc(alias = "ABS_Y")]
    pub const Y: AbsoluteAxis = AbsoluteAxis(1u32);
    #[doc(alias = "ABS_Z")]
    pub const Z: AbsoluteAxis = AbsoluteAxis(2u32);
    #[doc(alias = "ABS_RX")]
    pub const RX: AbsoluteAxis = AbsoluteAxis(3u32);
    #[doc(alias = "ABS_RY")]
    pub const RY: AbsoluteAxis = AbsoluteAxis(4u32);
    #[doc(alias = "ABS_RZ")]
    pub const RZ: AbsoluteAxis = AbsoluteAxis(5u32);
    #[doc(alias = "ABS_THROTTLE")]
    pub const THROTTLE: AbsoluteAxis = AbsoluteAxis(6u32);
    #[doc(alias = "ABS_RUDDER")]
    pub const RUDDER: AbsoluteAxis = AbsoluteAxis(7u32);
    #[doc(alias = "ABS_WHEEL")]
    pub const WHEEL: AbsoluteAxis = AbsoluteAxis(8u32);
    #[doc(alias = "ABS_GAS")]
    pub const GAS: AbsoluteAxis = AbsoluteAxis(9u32);
    #[doc(alias = "ABS_BRAKE")]
    pub const BRAKE: AbsoluteAxis = AbsoluteAxis(10u32);
    #[doc(alias = "ABS_HAT0X")]
    pub const HAT0X: AbsoluteAxis = AbsoluteAxis(16u32);
    #[doc(alias = "ABS_HAT0Y")]
    pub const HAT0Y: AbsoluteAxis = AbsoluteAxis(17u32);
    #[doc(alias = "ABS_HAT1X")]
    pub const HAT1X: AbsoluteAxis = AbsoluteAxis(18u32);
    #[doc(alias = "ABS_HAT1Y")]
    pub const HAT1Y: AbsoluteAxis = AbsoluteAxis(19u32);
    #[doc(alias = "ABS_HAT2X")]
    pub const HAT2X: AbsoluteAxis = AbsoluteAxis(20u32);
    #[doc(alias = "ABS_HAT2Y")]
    pub const HAT2Y: AbsoluteAxis = AbsoluteAxis(21u32);
    #[doc(alias = "ABS_HAT3X")]
    pub const HAT3X: AbsoluteAxis = AbsoluteAxis(22u32);
    #[doc(alias = "ABS_HAT3Y")]
    pub const HAT3Y: AbsoluteAxis = AbsoluteAxis(23u32);
    #[doc(alias = "ABS_PRESSURE")]
    pub const PRESSURE: AbsoluteAxis = AbsoluteAxis(24u32);
    #[doc(alias = "ABS_DISTANCE")]
    pub const DISTANCE: AbsoluteAxis = AbsoluteAxis(25u32);
    #[doc(alias = "ABS_TILT_X")]
    pub const TILT_X: AbsoluteAxis = AbsoluteAxis(26u32);
    #[doc(alias = "ABS_TILT_Y")]
    pub const TILT_Y: AbsoluteAxis = AbsoluteAxis(27u32);
    #[doc(alias = "ABS_TOOL_WIDTH")]
    pub const TOOL_WIDTH: AbsoluteAxis = AbsoluteAxis(28u32);
    #[doc(alias = "ABS_VOLUME")]
    pub const VOLUME: AbsoluteAxis = AbsoluteAxis(32u32);
    #[doc(alias = "ABS_MISC")]
    pub const MISC: AbsoluteAxis = AbsoluteAxis(40u32);
    #[doc(alias = "ABS_RESERVED")]
    pub const RESERVED: AbsoluteAxis = AbsoluteAxis(46u32);
    #[doc = " MT slot being modified "]
    #[doc(alias = "ABS_MT_SLOT")]
    pub const MT_SLOT: AbsoluteAxis = AbsoluteAxis(47u32);
    #[doc = " Major axis of touching ellipse "]
    #[doc(alias = "ABS_MT_TOUCH_MAJOR")]
    pub const MT_TOUCH_MAJOR: AbsoluteAxis = AbsoluteAxis(48u32);
    #[doc = " Minor axis (omit if circular) "]
    #[doc(alias = "ABS_MT_TOUCH_MINOR")]
    pub const MT_TOUCH_MINOR: AbsoluteAxis = AbsoluteAxis(49u32);
    #[doc = " Major axis of approaching ellipse "]
    #[doc(alias = "ABS_MT_WIDTH_MAJOR")]
    pub const MT_WIDTH_MAJOR: AbsoluteAxis = AbsoluteAxis(50u32);
    #[doc = " Minor axis (omit if circular) "]
    #[doc(alias = "ABS_MT_WIDTH_MINOR")]
    pub const MT_WIDTH_MINOR: AbsoluteAxis = AbsoluteAxis(51u32);
    #[doc = " Ellipse orientation "]
    #[doc(alias = "ABS_MT_ORIENTATION")]
    pub const MT_ORIENTATION: AbsoluteAxis = AbsoluteAxis(52u32);
    #[doc = " Center X touch position "]
    #[doc(alias = "ABS_MT_POSITION_X")]
    pub const MT_POSITION_X: AbsoluteAxis = AbsoluteAxis(53u32);
    #[doc = " Center Y touch position "]
    #[doc(alias = "ABS_MT_POSITION_Y")]
    pub const MT_POSITION_Y: AbsoluteAxis = AbsoluteAxis(54u32);
    #[doc = " Type of touching device "]
    #[doc(alias = "ABS_MT_TOOL_TYPE")]
    pub const MT_TOOL_TYPE: AbsoluteAxis = AbsoluteAxis(55u32);
    #[doc = " Group a set of packets as a blob "]
    #[doc(alias = "ABS_MT_BLOB_ID")]
    pub const MT_BLOB_ID: AbsoluteAxis = AbsoluteAxis(56u32);
    #[doc = " Unique ID of initiated contact "]
    #[doc(alias = "ABS_MT_TRACKING_ID")]
    pub const MT_TRACKING_ID: AbsoluteAxis = AbsoluteAxis(57u32);
    #[doc = " Pressure on contact area "]
    #[doc(alias = "ABS_MT_PRESSURE")]
    pub const MT_PRESSURE: AbsoluteAxis = AbsoluteAxis(58u32);
    #[doc = " Contact hover distance "]
    #[doc(alias = "ABS_MT_DISTANCE")]
    pub const MT_DISTANCE: AbsoluteAxis = AbsoluteAxis(59u32);
    #[doc = " Center X tool position "]
    #[doc(alias = "ABS_MT_TOOL_X")]
    pub const MT_TOOL_X: AbsoluteAxis = AbsoluteAxis(60u32);
    #[doc = " Center Y tool position "]
    #[doc(alias = "ABS_MT_TOOL_Y")]
    pub const MT_TOOL_Y: AbsoluteAxis = AbsoluteAxis(61u32);
    #[doc(alias = "ABS_MAX")]
    pub const MAX: AbsoluteAxis = AbsoluteAxis(63u32);
    #[doc(alias = "ABS_CNT")]
    pub const CNT: AbsoluteAxis = AbsoluteAxis(64u32);
}
#[repr(transparent)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]
pub struct Button(u32);
impl Button {
    pub const fn new(value: u32) -> Self {
        Self(value)
    }
    pub const fn into_inner(self) -> u32 {
        self.0
    }
}
impl From<u32> for Button {
    fn from(value: u32) -> Self {
        Self(value)
    }
}
impl From<Button> for u32 {
    fn from(value: Button) -> u32 {
        value.0
    }
}
impl AsRef<u32> for Button {
    fn as_ref(&self) -> &u32 {
        &self.0
    }
}
impl ::core::borrow::Borrow<u32> for Button {
    fn borrow(&self) -> &u32 {
        &self.0
    }
}
impl PartialEq<u32> for Button {
    fn eq(&self, other: &u32) -> bool {
        &self.0 == other
    }
}
impl Button {
    #[doc(alias = "BTN_MISC")]
    pub const MISC: Button = Button(256u32);
    #[doc(alias = "BTN_0")]
    pub const _0: Button = Button(256u32);
    #[doc(alias = "BTN_1")]
    pub const _1: Button = Button(257u32);
    #[doc(alias = "BTN_2")]
    pub const _2: Button = Button(258u32);
    #[doc(alias = "BTN_3")]
    pub const _3: Button = Button(259u32);
    #[doc(alias = "BTN_4")]
    pub const _4: Button = Button(260u32);
    #[doc(alias = "BTN_5")]
    pub const _5: Button = Button(261u32);
    #[doc(alias = "BTN_6")]
    pub const _6: Button = Button(262u32);
    #[doc(alias = "BTN_7")]
    pub const _7: Button = Button(263u32);
    #[doc(alias = "BTN_8")]
    pub const _8: Button = Button(264u32);
    #[doc(alias = "BTN_9")]
    pub const _9: Button = Button(265u32);
    #[doc(alias = "BTN_MOUSE")]
    pub const MOUSE: Button = Button(272u32);
    #[doc(alias = "BTN_LEFT")]
    pub const LEFT: Button = Button(272u32);
    #[doc(alias = "BTN_RIGHT")]
    pub const RIGHT: Button = Button(273u32);
    #[doc(alias = "BTN_MIDDLE")]
    pub const MIDDLE: Button = Button(274u32);
    #[doc(alias = "BTN_SIDE")]
    pub const SIDE: Button = Button(275u32);
    #[doc(alias = "BTN_EXTRA")]
    pub const EXTRA: Button = Button(276u32);
    #[doc(alias = "BTN_FORWARD")]
    pub const FORWARD: Button = Button(277u32);
    #[doc(alias = "BTN_BACK")]
    pub const BACK: Button = Button(278u32);
    #[doc(alias = "BTN_TASK")]
    pub const TASK: Button = Button(279u32);
    #[doc(alias = "BTN_JOYSTICK")]
    pub const JOYSTICK: Button = Button(288u32);
    #[doc(alias = "BTN_TRIGGER")]
    pub const TRIGGER: Button = Button(288u32);
    #[doc(alias = "BTN_THUMB")]
    pub const THUMB: Button = Button(289u32);
    #[doc(alias = "BTN_THUMB2")]
    pub const THUMB2: Button = Button(290u32);
    #[doc(alias = "BTN_TOP")]
    pub const TOP: Button = Button(291u32);
    #[doc(alias = "BTN_TOP2")]
    pub const TOP2: Button = Button(292u32);
    #[doc(alias = "BTN_PINKIE")]
    pub const PINKIE: Button = Button(293u32);
    #[doc(alias = "BTN_BASE")]
    pub const BASE: Button = Button(294u32);
    #[doc(alias = "BTN_BASE2")]
    pub const BASE2: Button = Button(295u32);
    #[doc(alias = "BTN_BASE3")]
    pub const BASE3: Button = Button(296u32);
    #[doc(alias = "BTN_BASE4")]
    pub const BASE4: Button = Button(297u32);
    #[doc(alias = "BTN_BASE5")]
    pub const BASE5: Button = Button(298u32);
    #[doc(alias = "BTN_BASE6")]
    pub const BASE6: Button = Button(299u32);
    #[doc(alias = "BTN_DEAD")]
    pub const DEAD: Button = Button(303u32);
    #[doc(alias = "BTN_GAMEPAD")]
    pub const GAMEPAD: Button = Button(304u32);
    #[doc(alias = "BTN_SOUTH")]
    pub const SOUTH: Button = Button(304u32);
    #[doc(alias = "BTN_A")]
    pub const A: Button = Button(304u32);
    #[doc(alias = "BTN_EAST")]
    pub const EAST: Button = Button(305u32);
    #[doc(alias = "BTN_B")]
    pub const B: Button = Button(305u32);
    #[doc(alias = "BTN_C")]
    pub const C: Button = Button(306u32);
    #[doc(alias = "BTN_NORTH")]
    pub const NORTH: Button = Button(307u32);
    #[doc(alias = "BTN_X")]
    pub const X: Button = Button(307u32);
    #[doc(alias = "BTN_WEST")]
    pub const WEST: Button = Button(308u32);
    #[doc(alias = "BTN_Y")]
    pub const Y: Button = Button(308u32);
    #[doc(alias = "BTN_Z")]
    pub const Z: Button = Button(309u32);
    #[doc(alias = "BTN_TL")]
    pub const TL: Button = Button(310u32);
    #[doc(alias = "BTN_TR")]
    pub const TR: Button = Button(311u32);
    #[doc(alias = "BTN_TL2")]
    pub const TL2: Button = Button(312u32);
    #[doc(alias = "BTN_TR2")]
    pub const TR2: Button = Button(313u32);
    #[doc(alias = "BTN_SELECT")]
    pub const SELECT: Button = Button(314u32);
    #[doc(alias = "BTN_START")]
    pub const START: Button = Button(315u32);
    #[doc(alias = "BTN_MODE")]
    pub const MODE: Button = Button(316u32);
    #[doc(alias = "BTN_THUMBL")]
    pub const THUMBL: Button = Button(317u32);
    #[doc(alias = "BTN_THUMBR")]
    pub const THUMBR: Button = Button(318u32);
    #[doc(alias = "BTN_DIGI")]
    pub const DIGI: Button = Button(320u32);
    #[doc(alias = "BTN_TOOL_PEN")]
    pub const TOOL_PEN: Button = Button(320u32);
    #[doc(alias = "BTN_TOOL_RUBBER")]
    pub const TOOL_RUBBER: Button = Button(321u32);
    #[doc(alias = "BTN_TOOL_BRUSH")]
    pub const TOOL_BRUSH: Button = Button(322u32);
    #[doc(alias = "BTN_TOOL_PENCIL")]
    pub const TOOL_PENCIL: Button = Button(323u32);
    #[doc(alias = "BTN_TOOL_AIRBRUSH")]
    pub const TOOL_AIRBRUSH: Button = Button(324u32);
    #[doc(alias = "BTN_TOOL_FINGER")]
    pub const TOOL_FINGER: Button = Button(325u32);
    #[doc(alias = "BTN_TOOL_MOUSE")]
    pub const TOOL_MOUSE: Button = Button(326u32);
    #[doc(alias = "BTN_TOOL_LENS")]
    pub const TOOL_LENS: Button = Button(327u32);
    #[doc = " Five fingers on trackpad "]
    #[doc(alias = "BTN_TOOL_QUINTTAP")]
    pub const TOOL_QUINTTAP: Button = Button(328u32);
    #[doc(alias = "BTN_STYLUS3")]
    pub const STYLUS3: Button = Button(329u32);
    #[doc(alias = "BTN_TOUCH")]
    pub const TOUCH: Button = Button(330u32);
    #[doc(alias = "BTN_STYLUS")]
    pub const STYLUS: Button = Button(331u32);
    #[doc(alias = "BTN_STYLUS2")]
    pub const STYLUS2: Button = Button(332u32);
    #[doc(alias = "BTN_TOOL_DOUBLETAP")]
    pub const TOOL_DOUBLETAP: Button = Button(333u32);
    #[doc(alias = "BTN_TOOL_TRIPLETAP")]
    pub const TOOL_TRIPLETAP: Button = Button(334u32);
    #[doc = " Four fingers on trackpad "]
    #[doc(alias = "BTN_TOOL_QUADTAP")]
    pub const TOOL_QUADTAP: Button = Button(335u32);
    #[doc(alias = "BTN_WHEEL")]
    pub const WHEEL: Button = Button(336u32);
    #[doc(alias = "BTN_GEAR_DOWN")]
    pub const GEAR_DOWN: Button = Button(336u32);
    #[doc(alias = "BTN_GEAR_UP")]
    pub const GEAR_UP: Button = Button(337u32);
    #[doc(alias = "BTN_DPAD_UP")]
    pub const DPAD_UP: Button = Button(544u32);
    #[doc(alias = "BTN_DPAD_DOWN")]
    pub const DPAD_DOWN: Button = Button(545u32);
    #[doc(alias = "BTN_DPAD_LEFT")]
    pub const DPAD_LEFT: Button = Button(546u32);
    #[doc(alias = "BTN_DPAD_RIGHT")]
    pub const DPAD_RIGHT: Button = Button(547u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY")]
    pub const TRIGGER_HAPPY: Button = Button(704u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY1")]
    pub const TRIGGER_HAPPY1: Button = Button(704u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY2")]
    pub const TRIGGER_HAPPY2: Button = Button(705u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY3")]
    pub const TRIGGER_HAPPY3: Button = Button(706u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY4")]
    pub const TRIGGER_HAPPY4: Button = Button(707u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY5")]
    pub const TRIGGER_HAPPY5: Button = Button(708u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY6")]
    pub const TRIGGER_HAPPY6: Button = Button(709u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY7")]
    pub const TRIGGER_HAPPY7: Button = Button(710u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY8")]
    pub const TRIGGER_HAPPY8: Button = Button(711u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY9")]
    pub const TRIGGER_HAPPY9: Button = Button(712u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY10")]
    pub const TRIGGER_HAPPY10: Button = Button(713u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY11")]
    pub const TRIGGER_HAPPY11: Button = Button(714u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY12")]
    pub const TRIGGER_HAPPY12: Button = Button(715u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY13")]
    pub const TRIGGER_HAPPY13: Button = Button(716u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY14")]
    pub const TRIGGER_HAPPY14: Button = Button(717u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY15")]
    pub const TRIGGER_HAPPY15: Button = Button(718u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY16")]
    pub const TRIGGER_HAPPY16: Button = Button(719u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY17")]
    pub const TRIGGER_HAPPY17: Button = Button(720u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY18")]
    pub const TRIGGER_HAPPY18: Button = Button(721u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY19")]
    pub const TRIGGER_HAPPY19: Button = Button(722u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY20")]
    pub const TRIGGER_HAPPY20: Button = Button(723u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY21")]
    pub const TRIGGER_HAPPY21: Button = Button(724u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY22")]
    pub const TRIGGER_HAPPY22: Button = Button(725u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY23")]
    pub const TRIGGER_HAPPY23: Button = Button(726u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY24")]
    pub const TRIGGER_HAPPY24: Button = Button(727u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY25")]
    pub const TRIGGER_HAPPY25: Button = Button(728u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY26")]
    pub const TRIGGER_HAPPY26: Button = Button(729u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY27")]
    pub const TRIGGER_HAPPY27: Button = Button(730u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY28")]
    pub const TRIGGER_HAPPY28: Button = Button(731u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY29")]
    pub const TRIGGER_HAPPY29: Button = Button(732u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY30")]
    pub const TRIGGER_HAPPY30: Button = Button(733u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY31")]
    pub const TRIGGER_HAPPY31: Button = Button(734u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY32")]
    pub const TRIGGER_HAPPY32: Button = Button(735u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY33")]
    pub const TRIGGER_HAPPY33: Button = Button(736u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY34")]
    pub const TRIGGER_HAPPY34: Button = Button(737u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY35")]
    pub const TRIGGER_HAPPY35: Button = Button(738u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY36")]
    pub const TRIGGER_HAPPY36: Button = Button(739u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY37")]
    pub const TRIGGER_HAPPY37: Button = Button(740u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY38")]
    pub const TRIGGER_HAPPY38: Button = Button(741u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY39")]
    pub const TRIGGER_HAPPY39: Button = Button(742u32);
    #[doc(alias = "BTN_TRIGGER_HAPPY40")]
    pub const TRIGGER_HAPPY40: Button = Button(743u32);
}
#[doc = "Event types."]
#[repr(transparent)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]
pub struct EventType(u32);
impl EventType {
    pub const fn new(value: u32) -> Self {
        Self(value)
    }
    pub const fn into_inner(self) -> u32 {
        self.0
    }
}
impl From<u32> for EventType {
    fn from(value: u32) -> Self {
        Self(value)
    }
}
impl From<EventType> for u32 {
    fn from(value: EventType) -> u32 {
        value.0
    }
}
impl AsRef<u32> for EventType {
    fn as_ref(&self) -> &u32 {
        &self.0
    }
}
impl ::core::borrow::Borrow<u32> for EventType {
    fn borrow(&self) -> &u32 {
        &self.0
    }
}
impl PartialEq<u32> for EventType {
    fn eq(&self, other: &u32) -> bool {
        &self.0 == other
    }
}
impl EventType {
    #[doc(alias = "EV_SYN")]
    pub const SYN: EventType = EventType(0u32);
    #[doc(alias = "EV_KEY")]
    pub const KEY: EventType = EventType(1u32);
    #[doc(alias = "EV_REL")]
    pub const REL: EventType = EventType(2u32);
    #[doc(alias = "EV_ABS")]
    pub const ABS: EventType = EventType(3u32);
    #[doc(alias = "EV_MSC")]
    pub const MSC: EventType = EventType(4u32);
    #[doc(alias = "EV_SW")]
    pub const SW: EventType = EventType(5u32);
    #[doc(alias = "EV_LED")]
    pub const LED: EventType = EventType(17u32);
    #[doc(alias = "EV_SND")]
    pub const SND: EventType = EventType(18u32);
    #[doc(alias = "EV_REP")]
    pub const REP: EventType = EventType(20u32);
    #[doc(alias = "EV_FF")]
    pub const FF: EventType = EventType(21u32);
    #[doc(alias = "EV_PWR")]
    pub const PWR: EventType = EventType(22u32);
    #[doc(alias = "EV_FF_STATUS")]
    pub const FF_STATUS: EventType = EventType(23u32);
    #[doc(alias = "EV_MAX")]
    pub const MAX: EventType = EventType(31u32);
    #[doc(alias = "EV_CNT")]
    pub const CNT: EventType = EventType(32u32);
}
#[doc = "Device properties and quirks."]
#[repr(transparent)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]
pub struct InputQuirk(u32);
impl InputQuirk {
    pub const fn new(value: u32) -> Self {
        Self(value)
    }
    pub const fn into_inner(self) -> u32 {
        self.0
    }
}
impl From<u32> for InputQuirk {
    fn from(value: u32) -> Self {
        Self(value)
    }
}
impl From<InputQuirk> for u32 {
    fn from(value: InputQuirk) -> u32 {
        value.0
    }
}
impl AsRef<u32> for InputQuirk {
    fn as_ref(&self) -> &u32 {
        &self.0
    }
}
impl ::core::borrow::Borrow<u32> for InputQuirk {
    fn borrow(&self) -> &u32 {
        &self.0
    }
}
impl PartialEq<u32> for InputQuirk {
    fn eq(&self, other: &u32) -> bool {
        &self.0 == other
    }
}
impl InputQuirk {
    #[doc = " needs a pointer "]
    #[doc(alias = "INPUT_PROP_POINTER")]
    pub const PROP_POINTER: InputQuirk = InputQuirk(0u32);
    #[doc = " direct input devices "]
    #[doc(alias = "INPUT_PROP_DIRECT")]
    pub const PROP_DIRECT: InputQuirk = InputQuirk(1u32);
    #[doc = " has button(s) under pad "]
    #[doc(alias = "INPUT_PROP_BUTTONPAD")]
    pub const PROP_BUTTONPAD: InputQuirk = InputQuirk(2u32);
    #[doc = " touch rectangle only "]
    #[doc(alias = "INPUT_PROP_SEMI_MT")]
    pub const PROP_SEMI_MT: InputQuirk = InputQuirk(3u32);
    #[doc = " softbuttons at top of pad "]
    #[doc(alias = "INPUT_PROP_TOPBUTTONPAD")]
    pub const PROP_TOPBUTTONPAD: InputQuirk = InputQuirk(4u32);
    #[doc = " is a pointing stick "]
    #[doc(alias = "INPUT_PROP_POINTING_STICK")]
    pub const PROP_POINTING_STICK: InputQuirk = InputQuirk(5u32);
    #[doc = " has accelerometer "]
    #[doc(alias = "INPUT_PROP_ACCELEROMETER")]
    pub const PROP_ACCELEROMETER: InputQuirk = InputQuirk(6u32);
    #[doc(alias = "INPUT_PROP_MAX")]
    pub const PROP_MAX: InputQuirk = InputQuirk(31u32);
    #[doc(alias = "INPUT_PROP_CNT")]
    pub const PROP_CNT: InputQuirk = InputQuirk(32u32);
}
#[repr(transparent)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]
pub struct Key(u32);
impl Key {
    pub const fn new(value: u32) -> Self {
        Self(value)
    }
    pub const fn into_inner(self) -> u32 {
        self.0
    }
}
impl From<u32> for Key {
    fn from(value: u32) -> Self {
        Self(value)
    }
}
impl From<Key> for u32 {
    fn from(value: Key) -> u32 {
        value.0
    }
}
impl AsRef<u32> for Key {
    fn as_ref(&self) -> &u32 {
        &self.0
    }
}
impl ::core::borrow::Borrow<u32> for Key {
    fn borrow(&self) -> &u32 {
        &self.0
    }
}
impl PartialEq<u32> for Key {
    fn eq(&self, other: &u32) -> bool {
        &self.0 == other
    }
}
impl Key {
    #[doc(alias = "KEY_RESERVED")]
    pub const RESERVED: Key = Key(0u32);
    #[doc(alias = "KEY_ESC")]
    pub const ESC: Key = Key(1u32);
    #[doc(alias = "KEY_1")]
    pub const _1: Key = Key(2u32);
    #[doc(alias = "KEY_2")]
    pub const _2: Key = Key(3u32);
    #[doc(alias = "KEY_3")]
    pub const _3: Key = Key(4u32);
    #[doc(alias = "KEY_4")]
    pub const _4: Key = Key(5u32);
    #[doc(alias = "KEY_5")]
    pub const _5: Key = Key(6u32);
    #[doc(alias = "KEY_6")]
    pub const _6: Key = Key(7u32);
    #[doc(alias = "KEY_7")]
    pub const _7: Key = Key(8u32);
    #[doc(alias = "KEY_8")]
    pub const _8: Key = Key(9u32);
    #[doc(alias = "KEY_9")]
    pub const _9: Key = Key(10u32);
    #[doc(alias = "KEY_0")]
    pub const _0: Key = Key(11u32);
    #[doc(alias = "KEY_MINUS")]
    pub const MINUS: Key = Key(12u32);
    #[doc(alias = "KEY_EQUAL")]
    pub const EQUAL: Key = Key(13u32);
    #[doc(alias = "KEY_BACKSPACE")]
    pub const BACKSPACE: Key = Key(14u32);
    #[doc(alias = "KEY_TAB")]
    pub const TAB: Key = Key(15u32);
    #[doc(alias = "KEY_Q")]
    pub const Q: Key = Key(16u32);
    #[doc(alias = "KEY_W")]
    pub const W: Key = Key(17u32);
    #[doc(alias = "KEY_E")]
    pub const E: Key = Key(18u32);
    #[doc(alias = "KEY_R")]
    pub const R: Key = Key(19u32);
    #[doc(alias = "KEY_T")]
    pub const T: Key = Key(20u32);
    #[doc(alias = "KEY_Y")]
    pub const Y: Key = Key(21u32);
    #[doc(alias = "KEY_U")]
    pub const U: Key = Key(22u32);
    #[doc(alias = "KEY_I")]
    pub const I: Key = Key(23u32);
    #[doc(alias = "KEY_O")]
    pub const O: Key = Key(24u32);
    #[doc(alias = "KEY_P")]
    pub const P: Key = Key(25u32);
    #[doc(alias = "KEY_LEFTBRACE")]
    pub const LEFTBRACE: Key = Key(26u32);
    #[doc(alias = "KEY_RIGHTBRACE")]
    pub const RIGHTBRACE: Key = Key(27u32);
    #[doc(alias = "KEY_ENTER")]
    pub const ENTER: Key = Key(28u32);
    #[doc(alias = "KEY_LEFTCTRL")]
    pub const LEFTCTRL: Key = Key(29u32);
    #[doc(alias = "KEY_A")]
    pub const A: Key = Key(30u32);
    #[doc(alias = "KEY_S")]
    pub const S: Key = Key(31u32);
    #[doc(alias = "KEY_D")]
    pub const D: Key = Key(32u32);
    #[doc(alias = "KEY_F")]
    pub const F: Key = Key(33u32);
    #[doc(alias = "KEY_G")]
    pub const G: Key = Key(34u32);
    #[doc(alias = "KEY_H")]
    pub const H: Key = Key(35u32);
    #[doc(alias = "KEY_J")]
    pub const J: Key = Key(36u32);
    #[doc(alias = "KEY_K")]
    pub const K: Key = Key(37u32);
    #[doc(alias = "KEY_L")]
    pub const L: Key = Key(38u32);
    #[doc(alias = "KEY_SEMICOLON")]
    pub const SEMICOLON: Key = Key(39u32);
    #[doc(alias = "KEY_APOSTROPHE")]
    pub const APOSTROPHE: Key = Key(40u32);
    #[doc(alias = "KEY_GRAVE")]
    pub const GRAVE: Key = Key(41u32);
    #[doc(alias = "KEY_LEFTSHIFT")]
    pub const LEFTSHIFT: Key = Key(42u32);
    #[doc(alias = "KEY_BACKSLASH")]
    pub const BACKSLASH: Key = Key(43u32);
    #[doc(alias = "KEY_Z")]
    pub const Z: Key = Key(44u32);
    #[doc(alias = "KEY_X")]
    pub const X: Key = Key(45u32);
    #[doc(alias = "KEY_C")]
    pub const C: Key = Key(46u32);
    #[doc(alias = "KEY_V")]
    pub const V: Key = Key(47u32);
    #[doc(alias = "KEY_B")]
    pub const B: Key = Key(48u32);
    #[doc(alias = "KEY_N")]
    pub const N: Key = Key(49u32);
    #[doc(alias = "KEY_M")]
    pub const M: Key = Key(50u32);
    #[doc(alias = "KEY_COMMA")]
    pub const COMMA: Key = Key(51u32);
    #[doc(alias = "KEY_DOT")]
    pub const DOT: Key = Key(52u32);
    #[doc(alias = "KEY_SLASH")]
    pub const SLASH: Key = Key(53u32);
    #[doc(alias = "KEY_RIGHTSHIFT")]
    pub const RIGHTSHIFT: Key = Key(54u32);
    #[doc(alias = "KEY_KPASTERISK")]
    pub const KPASTERISK: Key = Key(55u32);
    #[doc(alias = "KEY_LEFTALT")]
    pub const LEFTALT: Key = Key(56u32);
    #[doc(alias = "KEY_SPACE")]
    pub const SPACE: Key = Key(57u32);
    #[doc(alias = "KEY_CAPSLOCK")]
    pub const CAPSLOCK: Key = Key(58u32);
    #[doc(alias = "KEY_F1")]
    pub const F1: Key = Key(59u32);
    #[doc(alias = "KEY_F2")]
    pub const F2: Key = Key(60u32);
    #[doc(alias = "KEY_F3")]
    pub const F3: Key = Key(61u32);
    #[doc(alias = "KEY_F4")]
    pub const F4: Key = Key(62u32);
    #[doc(alias = "KEY_F5")]
    pub const F5: Key = Key(63u32);
    #[doc(alias = "KEY_F6")]
    pub const F6: Key = Key(64u32);
    #[doc(alias = "KEY_F7")]
    pub const F7: Key = Key(65u32);
    #[doc(alias = "KEY_F8")]
    pub const F8: Key = Key(66u32);
    #[doc(alias = "KEY_F9")]
    pub const F9: Key = Key(67u32);
    #[doc(alias = "KEY_F10")]
    pub const F10: Key = Key(68u32);
    #[doc(alias = "KEY_NUMLOCK")]
    pub const NUMLOCK: Key = Key(69u32);
    #[doc(alias = "KEY_SCROLLLOCK")]
    pub const SCROLLLOCK: Key = Key(70u32);
    #[doc(alias = "KEY_KP7")]
    pub const KP7: Key = Key(71u32);
    #[doc(alias = "KEY_KP8")]
    pub const KP8: Key = Key(72u32);
    #[doc(alias = "KEY_KP9")]
    pub const KP9: Key = Key(73u32);
    #[doc(alias = "KEY_KPMINUS")]
    pub const KPMINUS: Key = Key(74u32);
    #[doc(alias = "KEY_KP4")]
    pub const KP4: Key = Key(75u32);
    #[doc(alias = "KEY_KP5")]
    pub const KP5: Key = Key(76u32);
    #[doc(alias = "KEY_KP6")]
    pub const KP6: Key = Key(77u32);
    #[doc(alias = "KEY_KPPLUS")]
    pub const KPPLUS: Key = Key(78u32);
    #[doc(alias = "KEY_KP1")]
    pub const KP1: Key = Key(79u32);
    #[doc(alias = "KEY_KP2")]
    pub const KP2: Key = Key(80u32);
    #[doc(alias = "KEY_KP3")]
    pub const KP3: Key = Key(81u32);
    #[doc(alias = "KEY_KP0")]
    pub const KP0: Key = Key(82u32);
    #[doc(alias = "KEY_KPDOT")]
    pub const KPDOT: Key = Key(83u32);
    #[doc(alias = "KEY_ZENKAKUHANKAKU")]
    pub const ZENKAKUHANKAKU: Key = Key(85u32);
    #[doc(alias = "KEY_102ND")]
    pub const _102ND: Key = Key(86u32);
    #[doc(alias = "KEY_F11")]
    pub const F11: Key = Key(87u32);
    #[doc(alias = "KEY_F12")]
    pub const F12: Key = Key(88u32);
    #[doc(alias = "KEY_RO")]
    pub const RO: Key = Key(89u32);
    #[doc(alias = "KEY_KATAKANA")]
    pub const KATAKANA: Key = Key(90u32);
    #[doc(alias = "KEY_HIRAGANA")]
    pub const HIRAGANA: Key = Key(91u32);
    #[doc(alias = "KEY_HENKAN")]
    pub const HENKAN: Key = Key(92u32);
    #[doc(alias = "KEY_KATAKANAHIRAGANA")]
    pub const KATAKANAHIRAGANA: Key = Key(93u32);
    #[doc(alias = "KEY_MUHENKAN")]
    pub const MUHENKAN: Key = Key(94u32);
    #[doc(alias = "KEY_KPJPCOMMA")]
    pub const KPJPCOMMA: Key = Key(95u32);
    #[doc(alias = "KEY_KPENTER")]
    pub const KPENTER: Key = Key(96u32);
    #[doc(alias = "KEY_RIGHTCTRL")]
    pub const RIGHTCTRL: Key = Key(97u32);
    #[doc(alias = "KEY_KPSLASH")]
    pub const KPSLASH: Key = Key(98u32);
    #[doc(alias = "KEY_SYSRQ")]
    pub const SYSRQ: Key = Key(99u32);
    #[doc(alias = "KEY_RIGHTALT")]
    pub const RIGHTALT: Key = Key(100u32);
    #[doc(alias = "KEY_LINEFEED")]
    pub const LINEFEED: Key = Key(101u32);
    #[doc(alias = "KEY_HOME")]
    pub const HOME: Key = Key(102u32);
    #[doc(alias = "KEY_UP")]
    pub const UP: Key = Key(103u32);
    #[doc(alias = "KEY_PAGEUP")]
    pub const PAGEUP: Key = Key(104u32);
    #[doc(alias = "KEY_LEFT")]
    pub const LEFT: Key = Key(105u32);
    #[doc(alias = "KEY_RIGHT")]
    pub const RIGHT: Key = Key(106u32);
    #[doc(alias = "KEY_END")]
    pub const END: Key = Key(107u32);
    #[doc(alias = "KEY_DOWN")]
    pub const DOWN: Key = Key(108u32);
    #[doc(alias = "KEY_PAGEDOWN")]
    pub const PAGEDOWN: Key = Key(109u32);
    #[doc(alias = "KEY_INSERT")]
    pub const INSERT: Key = Key(110u32);
    #[doc(alias = "KEY_DELETE")]
    pub const DELETE: Key = Key(111u32);
    #[doc(alias = "KEY_MACRO")]
    pub const MACRO: Key = Key(112u32);
    #[doc(alias = "KEY_MUTE")]
    pub const MUTE: Key = Key(113u32);
    #[doc(alias = "KEY_VOLUMEDOWN")]
    pub const VOLUMEDOWN: Key = Key(114u32);
    #[doc(alias = "KEY_VOLUMEUP")]
    pub const VOLUMEUP: Key = Key(115u32);
    #[doc = " SC System Power Down "]
    #[doc(alias = "KEY_POWER")]
    pub const POWER: Key = Key(116u32);
    #[doc(alias = "KEY_KPEQUAL")]
    pub const KPEQUAL: Key = Key(117u32);
    #[doc(alias = "KEY_KPPLUSMINUS")]
    pub const KPPLUSMINUS: Key = Key(118u32);
    #[doc(alias = "KEY_PAUSE")]
    pub const PAUSE: Key = Key(119u32);
    #[doc = " AL Compiz Scale (Expose) "]
    #[doc(alias = "KEY_SCALE")]
    pub const SCALE: Key = Key(120u32);
    #[doc(alias = "KEY_KPCOMMA")]
    pub const KPCOMMA: Key = Key(121u32);
    #[doc(alias = "KEY_HANGEUL")]
    pub const HANGEUL: Key = Key(122u32);
    #[doc(alias = "KEY_HANGUEL")]
    pub const HANGUEL: Key = Key(122u32);
    #[doc(alias = "KEY_HANJA")]
    pub const HANJA: Key = Key(123u32);
    #[doc(alias = "KEY_YEN")]
    pub const YEN: Key = Key(124u32);
    #[doc(alias = "KEY_LEFTMETA")]
    pub const LEFTMETA: Key = Key(125u32);
    #[doc(alias = "KEY_RIGHTMETA")]
    pub const RIGHTMETA: Key = Key(126u32);
    #[doc(alias = "KEY_COMPOSE")]
    pub const COMPOSE: Key = Key(127u32);
    #[doc = " AC Stop "]
    #[doc(alias = "KEY_STOP")]
    pub const STOP: Key = Key(128u32);
    #[doc(alias = "KEY_AGAIN")]
    pub const AGAIN: Key = Key(129u32);
    #[doc = " AC Properties "]
    #[doc(alias = "KEY_PROPS")]
    pub const PROPS: Key = Key(130u32);
    #[doc = " AC Undo "]
    #[doc(alias = "KEY_UNDO")]
    pub const UNDO: Key = Key(131u32);
    #[doc(alias = "KEY_FRONT")]
    pub const FRONT: Key = Key(132u32);
    #[doc = " AC Copy "]
    #[doc(alias = "KEY_COPY")]
    pub const COPY: Key = Key(133u32);
    #[doc = " AC Open "]
    #[doc(alias = "KEY_OPEN")]
    pub const OPEN: Key = Key(134u32);
    #[doc = " AC Paste "]
    #[doc(alias = "KEY_PASTE")]
    pub const PASTE: Key = Key(135u32);
    #[doc = " AC Search "]
    #[doc(alias = "KEY_FIND")]
    pub const FIND: Key = Key(136u32);
    #[doc = " AC Cut "]
    #[doc(alias = "KEY_CUT")]
    pub const CUT: Key = Key(137u32);
    #[doc = " AL Integrated Help Center "]
    #[doc(alias = "KEY_HELP")]
    pub const HELP: Key = Key(138u32);
    #[doc = " Menu (show menu) "]
    #[doc(alias = "KEY_MENU")]
    pub const MENU: Key = Key(139u32);
    #[doc = " AL Calculator "]
    #[doc(alias = "KEY_CALC")]
    pub const CALC: Key = Key(140u32);
    #[doc(alias = "KEY_SETUP")]
    pub const SETUP: Key = Key(141u32);
    #[doc = " SC System Sleep "]
    #[doc(alias = "KEY_SLEEP")]
    pub const SLEEP: Key = Key(142u32);
    #[doc = " System Wake Up "]
    #[doc(alias = "KEY_WAKEUP")]
    pub const WAKEUP: Key = Key(143u32);
    #[doc = " AL Local Machine Browser "]
    #[doc(alias = "KEY_FILE")]
    pub const FILE: Key = Key(144u32);
    #[doc(alias = "KEY_SENDFILE")]
    pub const SENDFILE: Key = Key(145u32);
    #[doc(alias = "KEY_DELETEFILE")]
    pub const DELETEFILE: Key = Key(146u32);
    #[doc(alias = "KEY_XFER")]
    pub const XFER: Key = Key(147u32);
    #[doc(alias = "KEY_PROG1")]
    pub const PROG1: Key = Key(148u32);
    #[doc(alias = "KEY_PROG2")]
    pub const PROG2: Key = Key(149u32);
    #[doc = " AL Internet Browser "]
    #[doc(alias = "KEY_WWW")]
    pub const WWW: Key = Key(150u32);
    #[doc(alias = "KEY_MSDOS")]
    pub const MSDOS: Key = Key(151u32);
    #[doc = " AL Terminal Lock/Screensaver "]
    #[doc(alias = "KEY_COFFEE")]
    pub const COFFEE: Key = Key(152u32);
    #[doc(alias = "KEY_SCREENLOCK")]
    pub const SCREENLOCK: Key = Key(152u32);
    #[doc = " Display orientation for e.g. tablets "]
    #[doc(alias = "KEY_ROTATE_DISPLAY")]
    pub const ROTATE_DISPLAY: Key = Key(153u32);
    #[doc(alias = "KEY_DIRECTION")]
    pub const DIRECTION: Key = Key(153u32);
    #[doc(alias = "KEY_CYCLEWINDOWS")]
    pub const CYCLEWINDOWS: Key = Key(154u32);
    #[doc(alias = "KEY_MAIL")]
    pub const MAIL: Key = Key(155u32);
    #[doc = " AC Bookmarks "]
    #[doc(alias = "KEY_BOOKMARKS")]
    pub const BOOKMARKS: Key = Key(156u32);
    #[doc(alias = "KEY_COMPUTER")]
    pub const COMPUTER: Key = Key(157u32);
    #[doc = " AC Back "]
    #[doc(alias = "KEY_BACK")]
    pub const BACK: Key = Key(158u32);
    #[doc = " AC Forward "]
    #[doc(alias = "KEY_FORWARD")]
    pub const FORWARD: Key = Key(159u32);
    #[doc(alias = "KEY_CLOSECD")]
    pub const CLOSECD: Key = Key(160u32);
    #[doc(alias = "KEY_EJECTCD")]
    pub const EJECTCD: Key = Key(161u32);
    #[doc(alias = "KEY_EJECTCLOSECD")]
    pub const EJECTCLOSECD: Key = Key(162u32);
    #[doc(alias = "KEY_NEXTSONG")]
    pub const NEXTSONG: Key = Key(163u32);
    #[doc(alias = "KEY_PLAYPAUSE")]
    pub const PLAYPAUSE: Key = Key(164u32);
    #[doc(alias = "KEY_PREVIOUSSONG")]
    pub const PREVIOUSSONG: Key = Key(165u32);
    #[doc(alias = "KEY_STOPCD")]
    pub const STOPCD: Key = Key(166u32);
    #[doc(alias = "KEY_RECORD")]
    pub const RECORD: Key = Key(167u32);
    #[doc(alias = "KEY_REWIND")]
    pub const REWIND: Key = Key(168u32);
    #[doc = " Media Select Telephone "]
    #[doc(alias = "KEY_PHONE")]
    pub const PHONE: Key = Key(169u32);
    #[doc(alias = "KEY_ISO")]
    pub const ISO: Key = Key(170u32);
    #[doc = " AL Consumer Control Configuration "]
    #[doc(alias = "KEY_CONFIG")]
    pub const CONFIG: Key = Key(171u32);
    #[doc = " AC Home "]
    #[doc(alias = "KEY_HOMEPAGE")]
    pub const HOMEPAGE: Key = Key(172u32);
    #[doc = " AC Refresh "]
    #[doc(alias = "KEY_REFRESH")]
    pub const REFRESH: Key = Key(173u32);
    #[doc = " AC Exit "]
    #[doc(alias = "KEY_EXIT")]
    pub const EXIT: Key = Key(174u32);
    #[doc(alias = "KEY_MOVE")]
    pub const MOVE: Key = Key(175u32);
    #[doc(alias = "KEY_EDIT")]
    pub const EDIT: Key = Key(176u32);
    #[doc(alias = "KEY_SCROLLUP")]
    pub const SCROLLUP: Key = Key(177u32);
    #[doc(alias = "KEY_SCROLLDOWN")]
    pub const SCROLLDOWN: Key = Key(178u32);
    #[doc(alias = "KEY_KPLEFTPAREN")]
    pub const KPLEFTPAREN: Key = Key(179u32);
    #[doc(alias = "KEY_KPRIGHTPAREN")]
    pub const KPRIGHTPAREN: Key = Key(180u32);
    #[doc = " AC New "]
    #[doc(alias = "KEY_NEW")]
    pub const NEW: Key = Key(181u32);
    #[doc = " AC Redo/Repeat "]
    #[doc(alias = "KEY_REDO")]
    pub const REDO: Key = Key(182u32);
    #[doc(alias = "KEY_F13")]
    pub const F13: Key = Key(183u32);
    #[doc(alias = "KEY_F14")]
    pub const F14: Key = Key(184u32);
    #[doc(alias = "KEY_F15")]
    pub const F15: Key = Key(185u32);
    #[doc(alias = "KEY_F16")]
    pub const F16: Key = Key(186u32);
    #[doc(alias = "KEY_F17")]
    pub const F17: Key = Key(187u32);
    #[doc(alias = "KEY_F18")]
    pub const F18: Key = Key(188u32);
    #[doc(alias = "KEY_F19")]
    pub const F19: Key = Key(189u32);
    #[doc(alias = "KEY_F20")]
    pub const F20: Key = Key(190u32);
    #[doc(alias = "KEY_F21")]
    pub const F21: Key = Key(191u32);
    #[doc(alias = "KEY_F22")]
    pub const F22: Key = Key(192u32);
    #[doc(alias = "KEY_F23")]
    pub const F23: Key = Key(193u32);
    #[doc(alias = "KEY_F24")]
    pub const F24: Key = Key(194u32);
    #[doc(alias = "KEY_PLAYCD")]
    pub const PLAYCD: Key = Key(200u32);
    #[doc(alias = "KEY_PAUSECD")]
    pub const PAUSECD: Key = Key(201u32);
    #[doc(alias = "KEY_PROG3")]
    pub const PROG3: Key = Key(202u32);
    #[doc(alias = "KEY_PROG4")]
    pub const PROG4: Key = Key(203u32);
    #[doc = " AL Dashboard "]
    #[doc(alias = "KEY_DASHBOARD")]
    pub const DASHBOARD: Key = Key(204u32);
    #[doc(alias = "KEY_SUSPEND")]
    pub const SUSPEND: Key = Key(205u32);
    #[doc = " AC Close "]
    #[doc(alias = "KEY_CLOSE")]
    pub const CLOSE: Key = Key(206u32);
    #[doc(alias = "KEY_PLAY")]
    pub const PLAY: Key = Key(207u32);
    #[doc(alias = "KEY_FASTFORWARD")]
    pub const FASTFORWARD: Key = Key(208u32);
    #[doc(alias = "KEY_BASSBOOST")]
    pub const BASSBOOST: Key = Key(209u32);
    #[doc = " AC Print "]
    #[doc(alias = "KEY_PRINT")]
    pub const PRINT: Key = Key(210u32);
    #[doc(alias = "KEY_HP")]
    pub const HP: Key = Key(211u32);
    #[doc(alias = "KEY_CAMERA")]
    pub const CAMERA: Key = Key(212u32);
    #[doc(alias = "KEY_SOUND")]
    pub const SOUND: Key = Key(213u32);
    #[doc(alias = "KEY_QUESTION")]
    pub const QUESTION: Key = Key(214u32);
    #[doc(alias = "KEY_EMAIL")]
    pub const EMAIL: Key = Key(215u32);
    #[doc(alias = "KEY_CHAT")]
    pub const CHAT: Key = Key(216u32);
    #[doc(alias = "KEY_SEARCH")]
    pub const SEARCH: Key = Key(217u32);
    #[doc(alias = "KEY_CONNECT")]
    pub const CONNECT: Key = Key(218u32);
    #[doc = " AL Checkbook/Finance "]
    #[doc(alias = "KEY_FINANCE")]
    pub const FINANCE: Key = Key(219u32);
    #[doc(alias = "KEY_SPORT")]
    pub const SPORT: Key = Key(220u32);
    #[doc(alias = "KEY_SHOP")]
    pub const SHOP: Key = Key(221u32);
    #[doc(alias = "KEY_ALTERASE")]
    pub const ALTERASE: Key = Key(222u32);
    #[doc = " AC Cancel "]
    #[doc(alias = "KEY_CANCEL")]
    pub const CANCEL: Key = Key(223u32);
    #[doc(alias = "KEY_BRIGHTNESSDOWN")]
    pub const BRIGHTNESSDOWN: Key = Key(224u32);
    #[doc(alias = "KEY_BRIGHTNESSUP")]
    pub const BRIGHTNESSUP: Key = Key(225u32);
    #[doc(alias = "KEY_MEDIA")]
    pub const MEDIA: Key = Key(226u32);
    #[doc = " Cycle between available video\n\t\t\t\t\t   outputs (Monitor/LCD/TV-out/etc) "]
    #[doc(alias = "KEY_SWITCHVIDEOMODE")]
    pub const SWITCHVIDEOMODE: Key = Key(227u32);
    #[doc(alias = "KEY_KBDILLUMTOGGLE")]
    pub const KBDILLUMTOGGLE: Key = Key(228u32);
    #[doc(alias = "KEY_KBDILLUMDOWN")]
    pub const KBDILLUMDOWN: Key = Key(229u32);
    #[doc(alias = "KEY_KBDILLUMUP")]
    pub const KBDILLUMUP: Key = Key(230u32);
    #[doc = " AC Send "]
    #[doc(alias = "KEY_SEND")]
    pub const SEND: Key = Key(231u32);
    #[doc = " AC Reply "]
    #[doc(alias = "KEY_REPLY")]
    pub const REPLY: Key = Key(232u32);
    #[doc = " AC Forward Msg "]
    #[doc(alias = "KEY_FORWARDMAIL")]
    pub const FORWARDMAIL: Key = Key(233u32);
    #[doc = " AC Save "]
    #[doc(alias = "KEY_SAVE")]
    pub const SAVE: Key = Key(234u32);
    #[doc(alias = "KEY_DOCUMENTS")]
    pub const DOCUMENTS: Key = Key(235u32);
    #[doc(alias = "KEY_BATTERY")]
    pub const BATTERY: Key = Key(236u32);
    #[doc(alias = "KEY_BLUETOOTH")]
    pub const BLUETOOTH: Key = Key(237u32);
    #[doc(alias = "KEY_WLAN")]
    pub const WLAN: Key = Key(238u32);
    #[doc(alias = "KEY_UWB")]
    pub const UWB: Key = Key(239u32);
    #[doc(alias = "KEY_UNKNOWN")]
    pub const UNKNOWN: Key = Key(240u32);
    #[doc = " drive next video source "]
    #[doc(alias = "KEY_VIDEO_NEXT")]
    pub const VIDEO_NEXT: Key = Key(241u32);
    #[doc = " drive previous video source "]
    #[doc(alias = "KEY_VIDEO_PREV")]
    pub const VIDEO_PREV: Key = Key(242u32);
    #[doc = " brightness up, after max is min "]
    #[doc(alias = "KEY_BRIGHTNESS_CYCLE")]
    pub const BRIGHTNESS_CYCLE: Key = Key(243u32);
    #[doc = " Set Auto Brightness: manual\n\t\t\t\t\t  brightness control is off,\n\t\t\t\t\t  rely on ambient "]
    #[doc(alias = "KEY_BRIGHTNESS_AUTO")]
    pub const BRIGHTNESS_AUTO: Key = Key(244u32);
    #[doc(alias = "KEY_BRIGHTNESS_ZERO")]
    pub const BRIGHTNESS_ZERO: Key = Key(244u32);
    #[doc = " display device to off state "]
    #[doc(alias = "KEY_DISPLAY_OFF")]
    pub const DISPLAY_OFF: Key = Key(245u32);
    #[doc = " Wireless WAN (LTE, UMTS, GSM, etc.) "]
    #[doc(alias = "KEY_WWAN")]
    pub const WWAN: Key = Key(246u32);
    #[doc(alias = "KEY_WIMAX")]
    pub const WIMAX: Key = Key(246u32);
    #[doc = " Key that controls all radios "]
    #[doc(alias = "KEY_RFKILL")]
    pub const RFKILL: Key = Key(247u32);
    #[doc = " Mute / unmute the microphone "]
    #[doc(alias = "KEY_MICMUTE")]
    pub const MICMUTE: Key = Key(248u32);
    #[doc(alias = "KEY_OK")]
    pub const OK: Key = Key(352u32);
    #[doc(alias = "KEY_SELECT")]
    pub const SELECT: Key = Key(353u32);
    #[doc(alias = "KEY_GOTO")]
    pub const GOTO: Key = Key(354u32);
    #[doc(alias = "KEY_CLEAR")]
    pub const CLEAR: Key = Key(355u32);
    #[doc(alias = "KEY_POWER2")]
    pub const POWER2: Key = Key(356u32);
    #[doc(alias = "KEY_OPTION")]
    pub const OPTION: Key = Key(357u32);
    #[doc = " AL OEM Features/Tips/Tutorial "]
    #[doc(alias = "KEY_INFO")]
    pub const INFO: Key = Key(358u32);
    #[doc(alias = "KEY_TIME")]
    pub const TIME: Key = Key(359u32);
    #[doc(alias = "KEY_VENDOR")]
    pub const VENDOR: Key = Key(360u32);
    #[doc(alias = "KEY_ARCHIVE")]
    pub const ARCHIVE: Key = Key(361u32);
    #[doc = " Media Select Program Guide "]
    #[doc(alias = "KEY_PROGRAM")]
    pub const PROGRAM: Key = Key(362u32);
    #[doc(alias = "KEY_CHANNEL")]
    pub const CHANNEL: Key = Key(363u32);
    #[doc(alias = "KEY_FAVORITES")]
    pub const FAVORITES: Key = Key(364u32);
    #[doc(alias = "KEY_EPG")]
    pub const EPG: Key = Key(365u32);
    #[doc = " Media Select Home "]
    #[doc(alias = "KEY_PVR")]
    pub const PVR: Key = Key(366u32);
    #[doc(alias = "KEY_MHP")]
    pub const MHP: Key = Key(367u32);
    #[doc(alias = "KEY_LANGUAGE")]
    pub const LANGUAGE: Key = Key(368u32);
    #[doc(alias = "KEY_TITLE")]
    pub const TITLE: Key = Key(369u32);
    #[doc(alias = "KEY_SUBTITLE")]
    pub const SUBTITLE: Key = Key(370u32);
    #[doc(alias = "KEY_ANGLE")]
    pub const ANGLE: Key = Key(371u32);
    #[doc = " AC View Toggle "]
    #[doc(alias = "KEY_FULL_SCREEN")]
    pub const FULL_SCREEN: Key = Key(372u32);
    #[doc(alias = "KEY_ZOOM")]
    pub const ZOOM: Key = Key(372u32);
    #[doc(alias = "KEY_MODE")]
    pub const MODE: Key = Key(373u32);
    #[doc(alias = "KEY_KEYBOARD")]
    pub const KEYBOARD: Key = Key(374u32);
    #[doc = " HUTRR37: Aspect "]
    #[doc(alias = "KEY_ASPECT_RATIO")]
    pub const ASPECT_RATIO: Key = Key(375u32);
    #[doc(alias = "KEY_SCREEN")]
    pub const SCREEN: Key = Key(375u32);
    #[doc = " Media Select Computer "]
    #[doc(alias = "KEY_PC")]
    pub const PC: Key = Key(376u32);
    #[doc = " Media Select TV "]
    #[doc(alias = "KEY_TV")]
    pub const TV: Key = Key(377u32);
    #[doc = " Media Select Cable "]
    #[doc(alias = "KEY_TV2")]
    pub const TV2: Key = Key(378u32);
    #[doc = " Media Select VCR "]
    #[doc(alias = "KEY_VCR")]
    pub const VCR: Key = Key(379u32);
    #[doc = " VCR Plus "]
    #[doc(alias = "KEY_VCR2")]
    pub const VCR2: Key = Key(380u32);
    #[doc = " Media Select Satellite "]
    #[doc(alias = "KEY_SAT")]
    pub const SAT: Key = Key(381u32);
    #[doc(alias = "KEY_SAT2")]
    pub const SAT2: Key = Key(382u32);
    #[doc = " Media Select CD "]
    #[doc(alias = "KEY_CD")]
    pub const CD: Key = Key(383u32);
    #[doc = " Media Select Tape "]
    #[doc(alias = "KEY_TAPE")]
    pub const TAPE: Key = Key(384u32);
    #[doc(alias = "KEY_RADIO")]
    pub const RADIO: Key = Key(385u32);
    #[doc = " Media Select Tuner "]
    #[doc(alias = "KEY_TUNER")]
    pub const TUNER: Key = Key(386u32);
    #[doc(alias = "KEY_PLAYER")]
    pub const PLAYER: Key = Key(387u32);
    #[doc(alias = "KEY_TEXT")]
    pub const TEXT: Key = Key(388u32);
    #[doc = " Media Select DVD "]
    #[doc(alias = "KEY_DVD")]
    pub const DVD: Key = Key(389u32);
    #[doc(alias = "KEY_AUX")]
    pub const AUX: Key = Key(390u32);
    #[doc(alias = "KEY_MP3")]
    pub const MP3: Key = Key(391u32);
    #[doc = " AL Audio Browser "]
    #[doc(alias = "KEY_AUDIO")]
    pub const AUDIO: Key = Key(392u32);
    #[doc = " AL Movie Browser "]
    #[doc(alias = "KEY_VIDEO")]
    pub const VIDEO: Key = Key(393u32);
    #[doc(alias = "KEY_DIRECTORY")]
    pub const DIRECTORY: Key = Key(394u32);
    #[doc(alias = "KEY_LIST")]
    pub const LIST: Key = Key(395u32);
    #[doc = " Media Select Messages "]
    #[doc(alias = "KEY_MEMO")]
    pub const MEMO: Key = Key(396u32);
    #[doc(alias = "KEY_CALENDAR")]
    pub const CALENDAR: Key = Key(397u32);
    #[doc(alias = "KEY_RED")]
    pub const RED: Key = Key(398u32);
    #[doc(alias = "KEY_GREEN")]
    pub const GREEN: Key = Key(399u32);
    #[doc(alias = "KEY_YELLOW")]
    pub const YELLOW: Key = Key(400u32);
    #[doc(alias = "KEY_BLUE")]
    pub const BLUE: Key = Key(401u32);
    #[doc = " Channel Increment "]
    #[doc(alias = "KEY_CHANNELUP")]
    pub const CHANNELUP: Key = Key(402u32);
    #[doc = " Channel Decrement "]
    #[doc(alias = "KEY_CHANNELDOWN")]
    pub const CHANNELDOWN: Key = Key(403u32);
    #[doc(alias = "KEY_FIRST")]
    pub const FIRST: Key = Key(404u32);
    #[doc = " Recall Last "]
    #[doc(alias = "KEY_LAST")]
    pub const LAST: Key = Key(405u32);
    #[doc(alias = "KEY_AB")]
    pub const AB: Key = Key(406u32);
    #[doc(alias = "KEY_NEXT")]
    pub const NEXT: Key = Key(407u32);
    #[doc(alias = "KEY_RESTART")]
    pub const RESTART: Key = Key(408u32);
    #[doc(alias = "KEY_SLOW")]
    pub const SLOW: Key = Key(409u32);
    #[doc(alias = "KEY_SHUFFLE")]
    pub const SHUFFLE: Key = Key(410u32);
    #[doc(alias = "KEY_BREAK")]
    pub const BREAK: Key = Key(411u32);
    #[doc(alias = "KEY_PREVIOUS")]
    pub const PREVIOUS: Key = Key(412u32);
    #[doc(alias = "KEY_DIGITS")]
    pub const DIGITS: Key = Key(413u32);
    #[doc(alias = "KEY_TEEN")]
    pub const TEEN: Key = Key(414u32);
    #[doc(alias = "KEY_TWEN")]
    pub const TWEN: Key = Key(415u32);
    #[doc = " Media Select Video Phone "]
    #[doc(alias = "KEY_VIDEOPHONE")]
    pub const VIDEOPHONE: Key = Key(416u32);
    #[doc = " Media Select Games "]
    #[doc(alias = "KEY_GAMES")]
    pub const GAMES: Key = Key(417u32);
    #[doc = " AC Zoom In "]
    #[doc(alias = "KEY_ZOOMIN")]
    pub const ZOOMIN: Key = Key(418u32);
    #[doc = " AC Zoom Out "]
    #[doc(alias = "KEY_ZOOMOUT")]
    pub const ZOOMOUT: Key = Key(419u32);
    #[doc = " AC Zoom "]
    #[doc(alias = "KEY_ZOOMRESET")]
    pub const ZOOMRESET: Key = Key(420u32);
    #[doc = " AL Word Processor "]
    #[doc(alias = "KEY_WORDPROCESSOR")]
    pub const WORDPROCESSOR: Key = Key(421u32);
    #[doc = " AL Text Editor "]
    #[doc(alias = "KEY_EDITOR")]
    pub const EDITOR: Key = Key(422u32);
    #[doc = " AL Spreadsheet "]
    #[doc(alias = "KEY_SPREADSHEET")]
    pub const SPREADSHEET: Key = Key(423u32);
    #[doc = " AL Graphics Editor "]
    #[doc(alias = "KEY_GRAPHICSEDITOR")]
    pub const GRAPHICSEDITOR: Key = Key(424u32);
    #[doc = " AL Presentation App "]
    #[doc(alias = "KEY_PRESENTATION")]
    pub const PRESENTATION: Key = Key(425u32);
    #[doc = " AL Database App "]
    #[doc(alias = "KEY_DATABASE")]
    pub const DATABASE: Key = Key(426u32);
    #[doc = " AL Newsreader "]
    #[doc(alias = "KEY_NEWS")]
    pub const NEWS: Key = Key(427u32);
    #[doc = " AL Voicemail "]
    #[doc(alias = "KEY_VOICEMAIL")]
    pub const VOICEMAIL: Key = Key(428u32);
    #[doc = " AL Contacts/Address Book "]
    #[doc(alias = "KEY_ADDRESSBOOK")]
    pub const ADDRESSBOOK: Key = Key(429u32);
    #[doc = " AL Instant Messaging "]
    #[doc(alias = "KEY_MESSENGER")]
    pub const MESSENGER: Key = Key(430u32);
    #[doc = " Turn display (LCD) on and off "]
    #[doc(alias = "KEY_DISPLAYTOGGLE")]
    pub const DISPLAYTOGGLE: Key = Key(431u32);
    #[doc(alias = "KEY_BRIGHTNESS_TOGGLE")]
    pub const BRIGHTNESS_TOGGLE: Key = Key(431u32);
    #[doc = " AL Spell Check "]
    #[doc(alias = "KEY_SPELLCHECK")]
    pub const SPELLCHECK: Key = Key(432u32);
    #[doc = " AL Logoff "]
    #[doc(alias = "KEY_LOGOFF")]
    pub const LOGOFF: Key = Key(433u32);
    #[doc(alias = "KEY_DOLLAR")]
    pub const DOLLAR: Key = Key(434u32);
    #[doc(alias = "KEY_EURO")]
    pub const EURO: Key = Key(435u32);
    #[doc = " Consumer - transport controls "]
    #[doc(alias = "KEY_FRAMEBACK")]
    pub const FRAMEBACK: Key = Key(436u32);
    #[doc(alias = "KEY_FRAMEFORWARD")]
    pub const FRAMEFORWARD: Key = Key(437u32);
    #[doc = " GenDesc - system context menu "]
    #[doc(alias = "KEY_CONTEXT_MENU")]
    pub const CONTEXT_MENU: Key = Key(438u32);
    #[doc = " Consumer - transport control "]
    #[doc(alias = "KEY_MEDIA_REPEAT")]
    pub const MEDIA_REPEAT: Key = Key(439u32);
    #[doc = " 10 channels up (10+) "]
    #[doc(alias = "KEY_10CHANNELSUP")]
    pub const _10CHANNELSUP: Key = Key(440u32);
    #[doc = " 10 channels down (10-) "]
    #[doc(alias = "KEY_10CHANNELSDOWN")]
    pub const _10CHANNELSDOWN: Key = Key(441u32);
    #[doc = " AL Image Browser "]
    #[doc(alias = "KEY_IMAGES")]
    pub const IMAGES: Key = Key(442u32);
    #[doc = " Show/hide the notification center "]
    #[doc(alias = "KEY_NOTIFICATION_CENTER")]
    pub const NOTIFICATION_CENTER: Key = Key(444u32);
    #[doc = " Answer incoming call "]
    #[doc(alias = "KEY_PICKUP_PHONE")]
    pub const PICKUP_PHONE: Key = Key(445u32);
    #[doc = " Decline incoming call "]
    #[doc(alias = "KEY_HANGUP_PHONE")]
    pub const HANGUP_PHONE: Key = Key(446u32);
    #[doc(alias = "KEY_DEL_EOL")]
    pub const DEL_EOL: Key = Key(448u32);
    #[doc(alias = "KEY_DEL_EOS")]
    pub const DEL_EOS: Key = Key(449u32);
    #[doc(alias = "KEY_INS_LINE")]
    pub const INS_LINE: Key = Key(450u32);
    #[doc(alias = "KEY_DEL_LINE")]
    pub const DEL_LINE: Key = Key(451u32);
    #[doc(alias = "KEY_FN")]
    pub const FN: Key = Key(464u32);
    #[doc(alias = "KEY_FN_ESC")]
    pub const FN_ESC: Key = Key(465u32);
    #[doc(alias = "KEY_FN_F1")]
    pub const FN_F1: Key = Key(466u32);
    #[doc(alias = "KEY_FN_F2")]
    pub const FN_F2: Key = Key(467u32);
    #[doc(alias = "KEY_FN_F3")]
    pub const FN_F3: Key = Key(468u32);
    #[doc(alias = "KEY_FN_F4")]
    pub const FN_F4: Key = Key(469u32);
    #[doc(alias = "KEY_FN_F5")]
    pub const FN_F5: Key = Key(470u32);
    #[doc(alias = "KEY_FN_F6")]
    pub const FN_F6: Key = Key(471u32);
    #[doc(alias = "KEY_FN_F7")]
    pub const FN_F7: Key = Key(472u32);
    #[doc(alias = "KEY_FN_F8")]
    pub const FN_F8: Key = Key(473u32);
    #[doc(alias = "KEY_FN_F9")]
    pub const FN_F9: Key = Key(474u32);
    #[doc(alias = "KEY_FN_F10")]
    pub const FN_F10: Key = Key(475u32);
    #[doc(alias = "KEY_FN_F11")]
    pub const FN_F11: Key = Key(476u32);
    #[doc(alias = "KEY_FN_F12")]
    pub const FN_F12: Key = Key(477u32);
    #[doc(alias = "KEY_FN_1")]
    pub const FN_1: Key = Key(478u32);
    #[doc(alias = "KEY_FN_2")]
    pub const FN_2: Key = Key(479u32);
    #[doc(alias = "KEY_FN_D")]
    pub const FN_D: Key = Key(480u32);
    #[doc(alias = "KEY_FN_E")]
    pub const FN_E: Key = Key(481u32);
    #[doc(alias = "KEY_FN_F")]
    pub const FN_F: Key = Key(482u32);
    #[doc(alias = "KEY_FN_S")]
    pub const FN_S: Key = Key(483u32);
    #[doc(alias = "KEY_FN_B")]
    pub const FN_B: Key = Key(484u32);
    #[doc(alias = "KEY_FN_RIGHT_SHIFT")]
    pub const FN_RIGHT_SHIFT: Key = Key(485u32);
    #[doc(alias = "KEY_BRL_DOT1")]
    pub const BRL_DOT1: Key = Key(497u32);
    #[doc(alias = "KEY_BRL_DOT2")]
    pub const BRL_DOT2: Key = Key(498u32);
    #[doc(alias = "KEY_BRL_DOT3")]
    pub const BRL_DOT3: Key = Key(499u32);
    #[doc(alias = "KEY_BRL_DOT4")]
    pub const BRL_DOT4: Key = Key(500u32);
    #[doc(alias = "KEY_BRL_DOT5")]
    pub const BRL_DOT5: Key = Key(501u32);
    #[doc(alias = "KEY_BRL_DOT6")]
    pub const BRL_DOT6: Key = Key(502u32);
    #[doc(alias = "KEY_BRL_DOT7")]
    pub const BRL_DOT7: Key = Key(503u32);
    #[doc(alias = "KEY_BRL_DOT8")]
    pub const BRL_DOT8: Key = Key(504u32);
    #[doc(alias = "KEY_BRL_DOT9")]
    pub const BRL_DOT9: Key = Key(505u32);
    #[doc(alias = "KEY_BRL_DOT10")]
    pub const BRL_DOT10: Key = Key(506u32);
    #[doc = " used by phones, remote controls, "]
    #[doc(alias = "KEY_NUMERIC_0")]
    pub const NUMERIC_0: Key = Key(512u32);
    #[doc = " and other keypads "]
    #[doc(alias = "KEY_NUMERIC_1")]
    pub const NUMERIC_1: Key = Key(513u32);
    #[doc(alias = "KEY_NUMERIC_2")]
    pub const NUMERIC_2: Key = Key(514u32);
    #[doc(alias = "KEY_NUMERIC_3")]
    pub const NUMERIC_3: Key = Key(515u32);
    #[doc(alias = "KEY_NUMERIC_4")]
    pub const NUMERIC_4: Key = Key(516u32);
    #[doc(alias = "KEY_NUMERIC_5")]
    pub const NUMERIC_5: Key = Key(517u32);
    #[doc(alias = "KEY_NUMERIC_6")]
    pub const NUMERIC_6: Key = Key(518u32);
    #[doc(alias = "KEY_NUMERIC_7")]
    pub const NUMERIC_7: Key = Key(519u32);
    #[doc(alias = "KEY_NUMERIC_8")]
    pub const NUMERIC_8: Key = Key(520u32);
    #[doc(alias = "KEY_NUMERIC_9")]
    pub const NUMERIC_9: Key = Key(521u32);
    #[doc(alias = "KEY_NUMERIC_STAR")]
    pub const NUMERIC_STAR: Key = Key(522u32);
    #[doc(alias = "KEY_NUMERIC_POUND")]
    pub const NUMERIC_POUND: Key = Key(523u32);
    #[doc = " Phone key A - HUT Telephony 0xb9 "]
    #[doc(alias = "KEY_NUMERIC_A")]
    pub const NUMERIC_A: Key = Key(524u32);
    #[doc(alias = "KEY_NUMERIC_B")]
    pub const NUMERIC_B: Key = Key(525u32);
    #[doc(alias = "KEY_NUMERIC_C")]
    pub const NUMERIC_C: Key = Key(526u32);
    #[doc(alias = "KEY_NUMERIC_D")]
    pub const NUMERIC_D: Key = Key(527u32);
    #[doc(alias = "KEY_CAMERA_FOCUS")]
    pub const CAMERA_FOCUS: Key = Key(528u32);
    #[doc = " WiFi Protected Setup key "]
    #[doc(alias = "KEY_WPS_BUTTON")]
    pub const WPS_BUTTON: Key = Key(529u32);
    #[doc = " Request switch touchpad on or off "]
    #[doc(alias = "KEY_TOUCHPAD_TOGGLE")]
    pub const TOUCHPAD_TOGGLE: Key = Key(530u32);
    #[doc(alias = "KEY_TOUCHPAD_ON")]
    pub const TOUCHPAD_ON: Key = Key(531u32);
    #[doc(alias = "KEY_TOUCHPAD_OFF")]
    pub const TOUCHPAD_OFF: Key = Key(532u32);
    #[doc(alias = "KEY_CAMERA_ZOOMIN")]
    pub const CAMERA_ZOOMIN: Key = Key(533u32);
    #[doc(alias = "KEY_CAMERA_ZOOMOUT")]
    pub const CAMERA_ZOOMOUT: Key = Key(534u32);
    #[doc(alias = "KEY_CAMERA_UP")]
    pub const CAMERA_UP: Key = Key(535u32);
    #[doc(alias = "KEY_CAMERA_DOWN")]
    pub const CAMERA_DOWN: Key = Key(536u32);
    #[doc(alias = "KEY_CAMERA_LEFT")]
    pub const CAMERA_LEFT: Key = Key(537u32);
    #[doc(alias = "KEY_CAMERA_RIGHT")]
    pub const CAMERA_RIGHT: Key = Key(538u32);
    #[doc(alias = "KEY_ATTENDANT_ON")]
    pub const ATTENDANT_ON: Key = Key(539u32);
    #[doc(alias = "KEY_ATTENDANT_OFF")]
    pub const ATTENDANT_OFF: Key = Key(540u32);
    #[doc = " Attendant call on or off "]
    #[doc(alias = "KEY_ATTENDANT_TOGGLE")]
    pub const ATTENDANT_TOGGLE: Key = Key(541u32);
    #[doc = " Reading light on or off "]
    #[doc(alias = "KEY_LIGHTS_TOGGLE")]
    pub const LIGHTS_TOGGLE: Key = Key(542u32);
    #[doc = " Ambient light sensor "]
    #[doc(alias = "KEY_ALS_TOGGLE")]
    pub const ALS_TOGGLE: Key = Key(560u32);
    #[doc = " Display rotation lock "]
    #[doc(alias = "KEY_ROTATE_LOCK_TOGGLE")]
    pub const ROTATE_LOCK_TOGGLE: Key = Key(561u32);
    #[doc = " AL Button Configuration "]
    #[doc(alias = "KEY_BUTTONCONFIG")]
    pub const BUTTONCONFIG: Key = Key(576u32);
    #[doc = " AL Task/Project Manager "]
    #[doc(alias = "KEY_TASKMANAGER")]
    pub const TASKMANAGER: Key = Key(577u32);
    #[doc = " AL Log/Journal/Timecard "]
    #[doc(alias = "KEY_JOURNAL")]
    pub const JOURNAL: Key = Key(578u32);
    #[doc = " AL Control Panel "]
    #[doc(alias = "KEY_CONTROLPANEL")]
    pub const CONTROLPANEL: Key = Key(579u32);
    #[doc = " AL Select Task/Application "]
    #[doc(alias = "KEY_APPSELECT")]
    pub const APPSELECT: Key = Key(580u32);
    #[doc = " AL Screen Saver "]
    #[doc(alias = "KEY_SCREENSAVER")]
    pub const SCREENSAVER: Key = Key(581u32);
    #[doc = " Listening Voice Command "]
    #[doc(alias = "KEY_VOICECOMMAND")]
    pub const VOICECOMMAND: Key = Key(582u32);
    #[doc = " AL Context-aware desktop assistant "]
    #[doc(alias = "KEY_ASSISTANT")]
    pub const ASSISTANT: Key = Key(583u32);
    #[doc = " AC Next Keyboard Layout Select "]
    #[doc(alias = "KEY_KBD_LAYOUT_NEXT")]
    pub const KBD_LAYOUT_NEXT: Key = Key(584u32);
    #[doc = " Show/hide emoji picker (HUTRR101) "]
    #[doc(alias = "KEY_EMOJI_PICKER")]
    pub const EMOJI_PICKER: Key = Key(585u32);
    #[doc = " Set Brightness to Minimum "]
    #[doc(alias = "KEY_BRIGHTNESS_MIN")]
    pub const BRIGHTNESS_MIN: Key = Key(592u32);
    #[doc = " Set Brightness to Maximum "]
    #[doc(alias = "KEY_BRIGHTNESS_MAX")]
    pub const BRIGHTNESS_MAX: Key = Key(593u32);
    #[doc(alias = "KEY_KBDINPUTASSIST_PREV")]
    pub const KBDINPUTASSIST_PREV: Key = Key(608u32);
    #[doc(alias = "KEY_KBDINPUTASSIST_NEXT")]
    pub const KBDINPUTASSIST_NEXT: Key = Key(609u32);
    #[doc(alias = "KEY_KBDINPUTASSIST_PREVGROUP")]
    pub const KBDINPUTASSIST_PREVGROUP: Key = Key(610u32);
    #[doc(alias = "KEY_KBDINPUTASSIST_NEXTGROUP")]
    pub const KBDINPUTASSIST_NEXTGROUP: Key = Key(611u32);
    #[doc(alias = "KEY_KBDINPUTASSIST_ACCEPT")]
    pub const KBDINPUTASSIST_ACCEPT: Key = Key(612u32);
    #[doc(alias = "KEY_KBDINPUTASSIST_CANCEL")]
    pub const KBDINPUTASSIST_CANCEL: Key = Key(613u32);
    #[doc(alias = "KEY_RIGHT_UP")]
    pub const RIGHT_UP: Key = Key(614u32);
    #[doc(alias = "KEY_RIGHT_DOWN")]
    pub const RIGHT_DOWN: Key = Key(615u32);
    #[doc(alias = "KEY_LEFT_UP")]
    pub const LEFT_UP: Key = Key(616u32);
    #[doc(alias = "KEY_LEFT_DOWN")]
    pub const LEFT_DOWN: Key = Key(617u32);
    #[doc = " Show Device's Root Menu "]
    #[doc(alias = "KEY_ROOT_MENU")]
    pub const ROOT_MENU: Key = Key(618u32);
    #[doc(alias = "KEY_MEDIA_TOP_MENU")]
    pub const MEDIA_TOP_MENU: Key = Key(619u32);
    #[doc(alias = "KEY_NUMERIC_11")]
    pub const NUMERIC_11: Key = Key(620u32);
    #[doc(alias = "KEY_NUMERIC_12")]
    pub const NUMERIC_12: Key = Key(621u32);
    #[doc(alias = "KEY_AUDIO_DESC")]
    pub const AUDIO_DESC: Key = Key(622u32);
    #[doc(alias = "KEY_3D_MODE")]
    pub const _3D_MODE: Key = Key(623u32);
    #[doc(alias = "KEY_NEXT_FAVORITE")]
    pub const NEXT_FAVORITE: Key = Key(624u32);
    #[doc(alias = "KEY_STOP_RECORD")]
    pub const STOP_RECORD: Key = Key(625u32);
    #[doc(alias = "KEY_PAUSE_RECORD")]
    pub const PAUSE_RECORD: Key = Key(626u32);
    #[doc = " Video on Demand "]
    #[doc(alias = "KEY_VOD")]
    pub const VOD: Key = Key(627u32);
    #[doc(alias = "KEY_UNMUTE")]
    pub const UNMUTE: Key = Key(628u32);
    #[doc(alias = "KEY_FASTREVERSE")]
    pub const FASTREVERSE: Key = Key(629u32);
    #[doc(alias = "KEY_SLOWREVERSE")]
    pub const SLOWREVERSE: Key = Key(630u32);
    #[doc(alias = "KEY_DATA")]
    pub const DATA: Key = Key(631u32);
    #[doc(alias = "KEY_ONSCREEN_KEYBOARD")]
    pub const ONSCREEN_KEYBOARD: Key = Key(632u32);
    #[doc(alias = "KEY_PRIVACY_SCREEN_TOGGLE")]
    pub const PRIVACY_SCREEN_TOGGLE: Key = Key(633u32);
    #[doc(alias = "KEY_SELECTIVE_SCREENSHOT")]
    pub const SELECTIVE_SCREENSHOT: Key = Key(634u32);
    #[doc(alias = "KEY_MACRO1")]
    pub const MACRO1: Key = Key(656u32);
    #[doc(alias = "KEY_MACRO2")]
    pub const MACRO2: Key = Key(657u32);
    #[doc(alias = "KEY_MACRO3")]
    pub const MACRO3: Key = Key(658u32);
    #[doc(alias = "KEY_MACRO4")]
    pub const MACRO4: Key = Key(659u32);
    #[doc(alias = "KEY_MACRO5")]
    pub const MACRO5: Key = Key(660u32);
    #[doc(alias = "KEY_MACRO6")]
    pub const MACRO6: Key = Key(661u32);
    #[doc(alias = "KEY_MACRO7")]
    pub const MACRO7: Key = Key(662u32);
    #[doc(alias = "KEY_MACRO8")]
    pub const MACRO8: Key = Key(663u32);
    #[doc(alias = "KEY_MACRO9")]
    pub const MACRO9: Key = Key(664u32);
    #[doc(alias = "KEY_MACRO10")]
    pub const MACRO10: Key = Key(665u32);
    #[doc(alias = "KEY_MACRO11")]
    pub const MACRO11: Key = Key(666u32);
    #[doc(alias = "KEY_MACRO12")]
    pub const MACRO12: Key = Key(667u32);
    #[doc(alias = "KEY_MACRO13")]
    pub const MACRO13: Key = Key(668u32);
    #[doc(alias = "KEY_MACRO14")]
    pub const MACRO14: Key = Key(669u32);
    #[doc(alias = "KEY_MACRO15")]
    pub const MACRO15: Key = Key(670u32);
    #[doc(alias = "KEY_MACRO16")]
    pub const MACRO16: Key = Key(671u32);
    #[doc(alias = "KEY_MACRO17")]
    pub const MACRO17: Key = Key(672u32);
    #[doc(alias = "KEY_MACRO18")]
    pub const MACRO18: Key = Key(673u32);
    #[doc(alias = "KEY_MACRO19")]
    pub const MACRO19: Key = Key(674u32);
    #[doc(alias = "KEY_MACRO20")]
    pub const MACRO20: Key = Key(675u32);
    #[doc(alias = "KEY_MACRO21")]
    pub const MACRO21: Key = Key(676u32);
    #[doc(alias = "KEY_MACRO22")]
    pub const MACRO22: Key = Key(677u32);
    #[doc(alias = "KEY_MACRO23")]
    pub const MACRO23: Key = Key(678u32);
    #[doc(alias = "KEY_MACRO24")]
    pub const MACRO24: Key = Key(679u32);
    #[doc(alias = "KEY_MACRO25")]
    pub const MACRO25: Key = Key(680u32);
    #[doc(alias = "KEY_MACRO26")]
    pub const MACRO26: Key = Key(681u32);
    #[doc(alias = "KEY_MACRO27")]
    pub const MACRO27: Key = Key(682u32);
    #[doc(alias = "KEY_MACRO28")]
    pub const MACRO28: Key = Key(683u32);
    #[doc(alias = "KEY_MACRO29")]
    pub const MACRO29: Key = Key(684u32);
    #[doc(alias = "KEY_MACRO30")]
    pub const MACRO30: Key = Key(685u32);
    #[doc(alias = "KEY_MACRO_RECORD_START")]
    pub const MACRO_RECORD_START: Key = Key(688u32);
    #[doc(alias = "KEY_MACRO_RECORD_STOP")]
    pub const MACRO_RECORD_STOP: Key = Key(689u32);
    #[doc(alias = "KEY_MACRO_PRESET_CYCLE")]
    pub const MACRO_PRESET_CYCLE: Key = Key(690u32);
    #[doc(alias = "KEY_MACRO_PRESET1")]
    pub const MACRO_PRESET1: Key = Key(691u32);
    #[doc(alias = "KEY_MACRO_PRESET2")]
    pub const MACRO_PRESET2: Key = Key(692u32);
    #[doc(alias = "KEY_MACRO_PRESET3")]
    pub const MACRO_PRESET3: Key = Key(693u32);
    #[doc(alias = "KEY_KBD_LCD_MENU1")]
    pub const KBD_LCD_MENU1: Key = Key(696u32);
    #[doc(alias = "KEY_KBD_LCD_MENU2")]
    pub const KBD_LCD_MENU2: Key = Key(697u32);
    #[doc(alias = "KEY_KBD_LCD_MENU3")]
    pub const KBD_LCD_MENU3: Key = Key(698u32);
    #[doc(alias = "KEY_KBD_LCD_MENU4")]
    pub const KBD_LCD_MENU4: Key = Key(699u32);
    #[doc(alias = "KEY_KBD_LCD_MENU5")]
    pub const KBD_LCD_MENU5: Key = Key(700u32);
    #[doc(alias = "KEY_MIN_INTERESTING")]
    pub const MIN_INTERESTING: Key = Key(113u32);
    #[doc(alias = "KEY_MAX")]
    pub const MAX: Key = Key(767u32);
    #[doc(alias = "KEY_CNT")]
    pub const CNT: Key = Key(768u32);
}
#[repr(transparent)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]
pub struct Led(u32);
impl Led {
    pub const fn new(value: u32) -> Self {
        Self(value)
    }
    pub const fn into_inner(self) -> u32 {
        self.0
    }
}
impl From<u32> for Led {
    fn from(value: u32) -> Self {
        Self(value)
    }
}
impl From<Led> for u32 {
    fn from(value: Led) -> u32 {
        value.0
    }
}
impl AsRef<u32> for Led {
    fn as_ref(&self) -> &u32 {
        &self.0
    }
}
impl ::core::borrow::Borrow<u32> for Led {
    fn borrow(&self) -> &u32 {
        &self.0
    }
}
impl PartialEq<u32> for Led {
    fn eq(&self, other: &u32) -> bool {
        &self.0 == other
    }
}
impl Led {
    #[doc(alias = "LED_NUML")]
    pub const NUML: Led = Led(0u32);
    #[doc(alias = "LED_CAPSL")]
    pub const CAPSL: Led = Led(1u32);
    #[doc(alias = "LED_SCROLLL")]
    pub const SCROLLL: Led = Led(2u32);
    #[doc(alias = "LED_COMPOSE")]
    pub const COMPOSE: Led = Led(3u32);
    #[doc(alias = "LED_KANA")]
    pub const KANA: Led = Led(4u32);
    #[doc(alias = "LED_SLEEP")]
    pub const SLEEP: Led = Led(5u32);
    #[doc(alias = "LED_SUSPEND")]
    pub const SUSPEND: Led = Led(6u32);
    #[doc(alias = "LED_MUTE")]
    pub const MUTE: Led = Led(7u32);
    #[doc(alias = "LED_MISC")]
    pub const MISC: Led = Led(8u32);
    #[doc(alias = "LED_MAIL")]
    pub const MAIL: Led = Led(9u32);
    #[doc(alias = "LED_CHARGING")]
    pub const CHARGING: Led = Led(10u32);
    #[doc(alias = "LED_MAX")]
    pub const MAX: Led = Led(15u32);
    #[doc(alias = "LED_CNT")]
    pub const CNT: Led = Led(16u32);
}
#[doc = "Miscellaneous events."]
#[repr(transparent)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]
pub struct MiscEvent(u32);
impl MiscEvent {
    pub const fn new(value: u32) -> Self {
        Self(value)
    }
    pub const fn into_inner(self) -> u32 {
        self.0
    }
}
impl From<u32> for MiscEvent {
    fn from(value: u32) -> Self {
        Self(value)
    }
}
impl From<MiscEvent> for u32 {
    fn from(value: MiscEvent) -> u32 {
        value.0
    }
}
impl AsRef<u32> for MiscEvent {
    fn as_ref(&self) -> &u32 {
        &self.0
    }
}
impl ::core::borrow::Borrow<u32> for MiscEvent {
    fn borrow(&self) -> &u32 {
        &self.0
    }
}
impl PartialEq<u32> for MiscEvent {
    fn eq(&self, other: &u32) -> bool {
        &self.0 == other
    }
}
impl MiscEvent {
    #[doc(alias = "MSC_SERIAL")]
    pub const SERIAL: MiscEvent = MiscEvent(0u32);
    #[doc(alias = "MSC_PULSELED")]
    pub const PULSELED: MiscEvent = MiscEvent(1u32);
    #[doc(alias = "MSC_GESTURE")]
    pub const GESTURE: MiscEvent = MiscEvent(2u32);
    #[doc(alias = "MSC_RAW")]
    pub const RAW: MiscEvent = MiscEvent(3u32);
    #[doc(alias = "MSC_SCAN")]
    pub const SCAN: MiscEvent = MiscEvent(4u32);
    #[doc(alias = "MSC_TIMESTAMP")]
    pub const TIMESTAMP: MiscEvent = MiscEvent(5u32);
    #[doc(alias = "MSC_MAX")]
    pub const MAX: MiscEvent = MiscEvent(7u32);
    #[doc(alias = "MSC_CNT")]
    pub const CNT: MiscEvent = MiscEvent(8u32);
}
#[doc = "Relative axes."]
#[repr(transparent)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]
pub struct RelativeAxis(u32);
impl RelativeAxis {
    pub const fn new(value: u32) -> Self {
        Self(value)
    }
    pub const fn into_inner(self) -> u32 {
        self.0
    }
}
impl From<u32> for RelativeAxis {
    fn from(value: u32) -> Self {
        Self(value)
    }
}
impl From<RelativeAxis> for u32 {
    fn from(value: RelativeAxis) -> u32 {
        value.0
    }
}
impl AsRef<u32> for RelativeAxis {
    fn as_ref(&self) -> &u32 {
        &self.0
    }
}
impl ::core::borrow::Borrow<u32> for RelativeAxis {
    fn borrow(&self) -> &u32 {
        &self.0
    }
}
impl PartialEq<u32> for RelativeAxis {
    fn eq(&self, other: &u32) -> bool {
        &self.0 == other
    }
}
impl RelativeAxis {
    #[doc(alias = "REL_X")]
    pub const X: RelativeAxis = RelativeAxis(0u32);
    #[doc(alias = "REL_Y")]
    pub const Y: RelativeAxis = RelativeAxis(1u32);
    #[doc(alias = "REL_Z")]
    pub const Z: RelativeAxis = RelativeAxis(2u32);
    #[doc(alias = "REL_RX")]
    pub const RX: RelativeAxis = RelativeAxis(3u32);
    #[doc(alias = "REL_RY")]
    pub const RY: RelativeAxis = RelativeAxis(4u32);
    #[doc(alias = "REL_RZ")]
    pub const RZ: RelativeAxis = RelativeAxis(5u32);
    #[doc(alias = "REL_HWHEEL")]
    pub const HWHEEL: RelativeAxis = RelativeAxis(6u32);
    #[doc(alias = "REL_DIAL")]
    pub const DIAL: RelativeAxis = RelativeAxis(7u32);
    #[doc(alias = "REL_WHEEL")]
    pub const WHEEL: RelativeAxis = RelativeAxis(8u32);
    #[doc(alias = "REL_MISC")]
    pub const MISC: RelativeAxis = RelativeAxis(9u32);
    #[doc(alias = "REL_RESERVED")]
    pub const RESERVED: RelativeAxis = RelativeAxis(10u32);
    #[doc(alias = "REL_WHEEL_HI_RES")]
    pub const WHEEL_HI_RES: RelativeAxis = RelativeAxis(11u32);
    #[doc(alias = "REL_HWHEEL_HI_RES")]
    pub const HWHEEL_HI_RES: RelativeAxis = RelativeAxis(12u32);
    #[doc(alias = "REL_MAX")]
    pub const MAX: RelativeAxis = RelativeAxis(15u32);
    #[doc(alias = "REL_CNT")]
    pub const CNT: RelativeAxis = RelativeAxis(16u32);
}
#[doc = "Autorepeat values."]
#[repr(transparent)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]
pub struct AutoRepeat(u32);
impl AutoRepeat {
    pub const fn new(value: u32) -> Self {
        Self(value)
    }
    pub const fn into_inner(self) -> u32 {
        self.0
    }
}
impl From<u32> for AutoRepeat {
    fn from(value: u32) -> Self {
        Self(value)
    }
}
impl From<AutoRepeat> for u32 {
    fn from(value: AutoRepeat) -> u32 {
        value.0
    }
}
impl AsRef<u32> for AutoRepeat {
    fn as_ref(&self) -> &u32 {
        &self.0
    }
}
impl ::core::borrow::Borrow<u32> for AutoRepeat {
    fn borrow(&self) -> &u32 {
        &self.0
    }
}
impl PartialEq<u32> for AutoRepeat {
    fn eq(&self, other: &u32) -> bool {
        &self.0 == other
    }
}
impl AutoRepeat {
    #[doc(alias = "REP_DELAY")]
    pub const DELAY: AutoRepeat = AutoRepeat(0u32);
    #[doc(alias = "REP_PERIOD")]
    pub const PERIOD: AutoRepeat = AutoRepeat(1u32);
    #[doc(alias = "REP_MAX")]
    pub const MAX: AutoRepeat = AutoRepeat(1u32);
    #[doc(alias = "REP_CNT")]
    pub const CNT: AutoRepeat = AutoRepeat(2u32);
}
#[repr(transparent)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]
pub struct Sound(u32);
impl Sound {
    pub const fn new(value: u32) -> Self {
        Self(value)
    }
    pub const fn into_inner(self) -> u32 {
        self.0
    }
}
impl From<u32> for Sound {
    fn from(value: u32) -> Self {
        Self(value)
    }
}
impl From<Sound> for u32 {
    fn from(value: Sound) -> u32 {
        value.0
    }
}
impl AsRef<u32> for Sound {
    fn as_ref(&self) -> &u32 {
        &self.0
    }
}
impl ::core::borrow::Borrow<u32> for Sound {
    fn borrow(&self) -> &u32 {
        &self.0
    }
}
impl PartialEq<u32> for Sound {
    fn eq(&self, other: &u32) -> bool {
        &self.0 == other
    }
}
impl Sound {
    #[doc(alias = "SND_CLICK")]
    pub const CLICK: Sound = Sound(0u32);
    #[doc(alias = "SND_BELL")]
    pub const BELL: Sound = Sound(1u32);
    #[doc(alias = "SND_TONE")]
    pub const TONE: Sound = Sound(2u32);
    #[doc(alias = "SND_MAX")]
    pub const MAX: Sound = Sound(7u32);
    #[doc(alias = "SND_CNT")]
    pub const CNT: Sound = Sound(8u32);
}
#[doc = "Switch events."]
#[repr(transparent)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]
pub struct SwitchEvent(u32);
impl SwitchEvent {
    pub const fn new(value: u32) -> Self {
        Self(value)
    }
    pub const fn into_inner(self) -> u32 {
        self.0
    }
}
impl From<u32> for SwitchEvent {
    fn from(value: u32) -> Self {
        Self(value)
    }
}
impl From<SwitchEvent> for u32 {
    fn from(value: SwitchEvent) -> u32 {
        value.0
    }
}
impl AsRef<u32> for SwitchEvent {
    fn as_ref(&self) -> &u32 {
        &self.0
    }
}
impl ::core::borrow::Borrow<u32> for SwitchEvent {
    fn borrow(&self) -> &u32 {
        &self.0
    }
}
impl PartialEq<u32> for SwitchEvent {
    fn eq(&self, other: &u32) -> bool {
        &self.0 == other
    }
}
impl SwitchEvent {
    #[doc = " set = lid shut "]
    #[doc(alias = "SW_LID")]
    pub const LID: SwitchEvent = SwitchEvent(0u32);
    #[doc = " set = tablet mode "]
    #[doc(alias = "SW_TABLET_MODE")]
    pub const TABLET_MODE: SwitchEvent = SwitchEvent(1u32);
    #[doc = " set = inserted "]
    #[doc(alias = "SW_HEADPHONE_INSERT")]
    pub const HEADPHONE_INSERT: SwitchEvent = SwitchEvent(2u32);
    #[doc = " rfkill master switch, type \"any\"\n\t\t\t\t\t set = radio enabled "]
    #[doc(alias = "SW_RFKILL_ALL")]
    pub const RFKILL_ALL: SwitchEvent = SwitchEvent(3u32);
    #[doc = " deprecated "]
    #[doc(alias = "SW_RADIO")]
    pub const RADIO: SwitchEvent = SwitchEvent(3u32);
    #[doc = " set = inserted "]
    #[doc(alias = "SW_MICROPHONE_INSERT")]
    pub const MICROPHONE_INSERT: SwitchEvent = SwitchEvent(4u32);
    #[doc = " set = plugged into dock "]
    #[doc(alias = "SW_DOCK")]
    pub const DOCK: SwitchEvent = SwitchEvent(5u32);
    #[doc = " set = inserted "]
    #[doc(alias = "SW_LINEOUT_INSERT")]
    pub const LINEOUT_INSERT: SwitchEvent = SwitchEvent(6u32);
    #[doc = " set = mechanical switch set "]
    #[doc(alias = "SW_JACK_PHYSICAL_INSERT")]
    pub const JACK_PHYSICAL_INSERT: SwitchEvent = SwitchEvent(7u32);
    #[doc = " set = inserted "]
    #[doc(alias = "SW_VIDEOOUT_INSERT")]
    pub const VIDEOOUT_INSERT: SwitchEvent = SwitchEvent(8u32);
    #[doc = " set = lens covered "]
    #[doc(alias = "SW_CAMERA_LENS_COVER")]
    pub const CAMERA_LENS_COVER: SwitchEvent = SwitchEvent(9u32);
    #[doc = " set = keypad slide out "]
    #[doc(alias = "SW_KEYPAD_SLIDE")]
    pub const KEYPAD_SLIDE: SwitchEvent = SwitchEvent(10u32);
    #[doc = " set = front proximity sensor active "]
    #[doc(alias = "SW_FRONT_PROXIMITY")]
    pub const FRONT_PROXIMITY: SwitchEvent = SwitchEvent(11u32);
    #[doc = " set = rotate locked/disabled "]
    #[doc(alias = "SW_ROTATE_LOCK")]
    pub const ROTATE_LOCK: SwitchEvent = SwitchEvent(12u32);
    #[doc = " set = inserted "]
    #[doc(alias = "SW_LINEIN_INSERT")]
    pub const LINEIN_INSERT: SwitchEvent = SwitchEvent(13u32);
    #[doc = " set = device disabled "]
    #[doc(alias = "SW_MUTE_DEVICE")]
    pub const MUTE_DEVICE: SwitchEvent = SwitchEvent(14u32);
    #[doc = " set = pen inserted "]
    #[doc(alias = "SW_PEN_INSERTED")]
    pub const PEN_INSERTED: SwitchEvent = SwitchEvent(15u32);
    #[doc = " set = cover closed "]
    #[doc(alias = "SW_MACHINE_COVER")]
    pub const MACHINE_COVER: SwitchEvent = SwitchEvent(16u32);
    #[doc(alias = "SW_MAX")]
    pub const MAX: SwitchEvent = SwitchEvent(16u32);
    #[doc(alias = "SW_CNT")]
    pub const CNT: SwitchEvent = SwitchEvent(17u32);
}
#[doc = "Synchronization events."]
#[repr(transparent)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]
pub struct SynchronizationEvent(u32);
impl SynchronizationEvent {
    pub const fn new(value: u32) -> Self {
        Self(value)
    }
    pub const fn into_inner(self) -> u32 {
        self.0
    }
}
impl From<u32> for SynchronizationEvent {
    fn from(value: u32) -> Self {
        Self(value)
    }
}
impl From<SynchronizationEvent> for u32 {
    fn from(value: SynchronizationEvent) -> u32 {
        value.0
    }
}
impl AsRef<u32> for SynchronizationEvent {
    fn as_ref(&self) -> &u32 {
        &self.0
    }
}
impl ::core::borrow::Borrow<u32> for SynchronizationEvent {
    fn borrow(&self) -> &u32 {
        &self.0
    }
}
impl PartialEq<u32> for SynchronizationEvent {
    fn eq(&self, other: &u32) -> bool {
        &self.0 == other
    }
}
impl SynchronizationEvent {
    #[doc(alias = "SYN_REPORT")]
    pub const REPORT: SynchronizationEvent = SynchronizationEvent(0u32);
    #[doc(alias = "SYN_CONFIG")]
    pub const CONFIG: SynchronizationEvent = SynchronizationEvent(1u32);
    #[doc(alias = "SYN_MT_REPORT")]
    pub const MT_REPORT: SynchronizationEvent = SynchronizationEvent(2u32);
    #[doc(alias = "SYN_DROPPED")]
    pub const DROPPED: SynchronizationEvent = SynchronizationEvent(3u32);
    #[doc(alias = "SYN_MAX")]
    pub const MAX: SynchronizationEvent = SynchronizationEvent(15u32);
    #[doc(alias = "SYN_CNT")]
    pub const CNT: SynchronizationEvent = SynchronizationEvent(16u32);
}
